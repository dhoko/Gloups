#!/usr/bin/env node
// "use strict"
var fs          = require('fs'),
    path        = require('path'),
    inquirer    = require('inquirer'),
    child       = require('child_process'),
    log         = require('../lib/log'),
    makeInstall = require('../lib/makeinstall'),
    makeView    = require('../lib/makeview'),
    makeroute   = require('../lib/makeroute'),
    success     = log.success,
    info        = log.info,
    error       = log.error;

var current = __filename.split(path.sep);
current.pop();
var config = {
  SRC : process.cwd() + path.sep + 'src' +path.sep,
  PARTIALS : process.cwd() + path.sep + 'src' +path.sep + 'partials' + path.sep,
  VIEWS : process.cwd() + path.sep + 'src' +path.sep + 'js' + path.sep + 'views' + path.sep,
  ROUTES : process.cwd() + path.sep + 'src' +path.sep + 'js' + path.sep + 'routers' + path.sep,
  GENERATOR : current.join(path.sep) + path.sep + ".." + path.sep + 'generators' + path.sep
};

var GLOUPS_CONFIG = {
  module    : current.splice(0,current.indexOf('gloups')).join(path.sep) + path.sep,
  src       : process.cwd() + path.sep + 'src' +path.sep,
  partials  : process.cwd() + path.sep + 'src' +path.sep + 'partials' + path.sep,
  views     : process.cwd() + path.sep + 'src' +path.sep + 'scripts' + path.sep + 'views' + path.sep,
  routes    : process.cwd() + path.sep + 'src' +path.sep + 'scripts' + path.sep + 'routers' + path.sep,
  generator : ""
};


if(process.argv.length >= 2) {

  // Read the first additional argument passed to the program
  var command = process.argv[2];

  // Main command to create an app from a generator
  if('make' === command) {

    /**
     * Read inside Gloups install directory/.., it's your global directory.
     * Then we will find each generators for gloups.
     * They must be : gloups-[generator name]
     */
    fs.readdir(path.resolve(GLOUPS_CONFIG.module),function(err,files) {

      // Filter each folders and list only generators
      files = files.map(function(file) {
        if(file.toLowerCase().indexOf('gloups') > -1) {
          var names = file.split('-');
          if(names.length > 1) {
            names.shift();
            return names.join('-');
          }
        }
      }).filter(function(item) { return item !== undefined;});

      inquirer.prompt([
        {
          type : "input",
          name : "name",
          message : "Name of your app :"
        },
        {
          type : "list",
          name : "generator",
          message : "Choose a generator :",
          choices : files
        }
      ], function( answers ) {
          GLOUPS_CONFIG.generator = GLOUPS_CONFIG.module + 'gloups-' + answers.generator + path.sep;
          makeInstall(answers,GLOUPS_CONFIG);
      });

    });
  }


  if('view' === command) {

    var viewName = process.argv[3];
    if(!viewName) {
      error('You must give a view name');
    }

    makeView(viewName,config);
    makeroute(viewName,config);

    var lorem = 'Lorem ipsum dolor sit amet, consectetur adipisicing elit. Quis, voluptates, doloremque. Rerum, illum, fugiat nemo natus aperiam nesciunt provident excepturi quo suscipit earum maiores placeat reiciendis ipsa eum numquam aliquid.';

    child.exec('echo ' + lorem + ' > ' + config.PARTIALS + viewName.toLowerCase() +'.html', function(err) {
      error(err);
    });
    success('Your partial view is ready');

  }

} else {
  error("You must specify an option");
}
